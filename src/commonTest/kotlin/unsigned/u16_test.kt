package unsigned

import uns.*
import kotlin.test.Test
import kotlin.test.assertTrue

class u16_test {

    @Test
    fun u16() {

        U16(0xFFFF).v `==` 0xFFFF.us
        U16(0b1111111111111111.us).v `==` 0xFFFF.us
        U16("1111_1111_1111_1111", 2).v `==` 0xFFFF.us
        U16("177'777", 8).v `==` 0xFFFF.us
        U16("65'535").v `==` 0xFFFF.us
        U16("FFFF", 16).v `==` 0xFFFF.us

        var a = U16.MAX

        a.bigInt `==` BigInt(0xFFFF)
        a.f64 `==` 0xFFFF.f64
        a.f64 `==` 65535.0
        a.f `==` 0xFFFF.f
        a.f `==` 65535f
        a.L `==` 0xFFFFL
        a.L `==` 65535L
        a.i `==` 0xFFFF
        a.i `==` 65535
        a.i.toChar() `==` 0xFFFF.toChar()
        a.i16 `==` 0xFFFF.i16
        a.i16 `==` 65535.toShort()

        a.ub `==` U8(0xFFFF).v
        a.ui `==` U32(0xFFFF).v
        a.ul `==` U64(0xFFFF).v

        var b = U16(1)
        var c = U16(0)

        assertTrue { a > b && b > c }

        a + b `==` c
        a + 1.us `==` c
        a + 1 `==` 65535 + 1

        c = U16(0xFFFE)

        a - b `==` c
        a - 1.us `==` c
        a - 1 `==` c.i

        a = U16(30_000)
        b = U16(2)
        c = U16(60_000)

        a * b `==` c
        a * 2.us `==` c
        a * 2 `==` c.i

        c / b `==` a
        c / 2.us `==` a
        c / 2.ui `==` a.ui

        b = U16(50_000)
        c = U16(20_000)

        b % a `==` c
        b % 30000.us `==` c
        b % 30000.ui `==` c.ui

        a = U16(0b1010_1010__1010_1010)
        b = U16(0b0000_1111__0000_1111)
        c = U16(0b0000_1010__0000_1010)

        a and b `==` c
        a and 0b0000_1111__0000_1111.us `==` c
        a and 3_855 `==` c

        c = U16(0b1010111110101111)

        a or b `==` c
        a or 0b1010_1111__1010_1111.us `==` c
        a or 44_975 `==` c

        c = U16(0b1010_0101__1010_0101)

        a xor b `==` c
        a xor 0b0000_1111__0000_1111.us `==` c
        a xor 3855 `==` c

        a = U16(0b0100_1100__0011_1101)
        b = U16(8)
        c = U16(0b0011_1101__0000_0000)

        a shl b `==` c
        a shl 8.us `==` c
        a shl 8 `==` c

        c = U16(0b0000_0000__0100_1100)

        a shr b `==` c
        a shr 8.us `==` c
        a shr 8.ui `==` c

        b = U16(0b1011_0011__1100_0010)

        a.inv() `==` b

        a = U16(65_500)

        a compareTo U16(65_499) `==` 1
        a compareTo 65499.us `==` 1
        a compareTo 65499.ui `==` 1
        a compareTo a `==` 0
        a compareTo 65500.us `==` 0
        a compareTo 65500.ui `==` 0

        0xFFFF.i16 + U16(1) `==` 0.u16
        0xFFFF.i16 - U16(1) `==` 0xFFFE.u16
        30_000.i16 * U16(2) `==` 60_000.u16
        60_000.us / U16(2) `==` 30_000.u16
        65_000.us % U16(10_000) `==` 5_000.u16
        0b1010_1010__1010_1010.i16 and U16(0b0000_1111__0000_1111) `==` 0b0000_1010__0000_1010.i16
        0b1010_1010__1010_1010.i16 or U16(0b0000_1111__0000_1111) `==` 0b1010_1111__1010_1111.i16
        0b1010_1010__1010_1010.i16 xor U16(0b0000_1111__0000_1111) `==` 0b1010_0101_1010_0101.i16
        0b0100_1100__0011_1101.i16 shl U16(8) `==` 0b0011_1101__0000_0000.i16
        0b0100_1100__0011_1101.i16 shr U16(8) `==` 0b0000_0000__0100_1100.i16
        //        0b0100_1100__0011_1101.us.inv() `==` 0b1011_0011__1100_0010.us
        65_500.us compareTo U16(65_499) `==` 1
        65_500.us compareTo U16(65_500) `==` 0

        0xFFFF + U16(1) `==` 0b1000_0000__0000_00000
        0xFFFF - U16(1) `==` 0xFFFE
        30_000 * U16(2) `==` 60_000
        60_000.us / U16(2) `==` 30_000.u16
        65_000.us % U16(10_000) `==` 5_000.u16
        0b1010_1010__1010_1010 and U16(0b0000_1111__0000_1111) `==` 0b0000_1010__0000_1010
        0b1010_1010__1010_1010 or U16(0b0000_1111__0000_1111) `==` 0b1010_1111__1010_1111
        0b1010_1010__1010_1010 xor U16(0b0000_1111__0000_1111) `==` 0b1010_0101__1010_0101
        0b0100_1100__0011_1101 shl U16(8) `==` 0b0100_1100__0011_1101__0000_0000
        0b0100_1100__0011_1101 shr U16(8) `==` 0b100_1100
        65_500.us compareTo U16(65_499) `==` 1
        65_500.us compareTo U16(65_500) `==` 0
    }
}